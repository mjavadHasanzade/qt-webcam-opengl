name: Linux + Windows Release

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches:
      - master
      - continuous-integration

jobs:
  linux-build:
    name: Build Linux
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          fetch-tags: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.9
          modules: qtcharts qtmultimedia qtshadertools

      - name: Install 7zip
        run: sudo apt-get update && sudo apt-get install -y build-essential p7zip-full

      - name: Create build directory
        run: mkdir build

      - name: Build
        working-directory: build
        run: |
          qmake -r ../qt-webcam.pro
          make -j$(nproc)

      - name: Package build
        working-directory: build
        run: 7z a qt-webcam-linux.zip * -r

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qt-webcam-linux
          path: build/qt-webcam-linux.zip

  windows-build:
    name: Build Windows (MinGW)
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          fetch-tags: true

      - name: Install Qt with MinGW
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.9
          arch: win64_mingw
          modules: qtcharts qtmultimedia qtshadertools

      - name: Install 7-zip
        run: choco install 7zip -y

      - name: Create build directory
        run: mkdir build

      - name: Build with MinGW
        working-directory: build
        run: |
          qmake -r ../qt-webcam.pro
          mingw32-make -j4

      - name: Package build
        run: 7z a qt-webcam-windows.zip .\build\* -r

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qt-webcam-windows
          path: qt-webcam-windows.zip

  release:
    name: Create GitHub Release
    runs-on: ubuntu-22.04
    needs:
      - linux-build
      - windows-build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: qt-webcam-linux
          path: release_artifacts

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: qt-webcam-windows
          path: release_artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: release_artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}