name: Build and Release Qt App

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Qt
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.9* 
          modules: qtbase qtdeclarative qtmultimedia qttools qtshadertools qtcharts qt5compat
          tools: "tools_ifw"

      - name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      # Build
      - name: Build
        run: cmake --build build --config Release -j 4

      # Package binaries
      - name: Package app
        run: |
          mkdir -p artifacts
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            cp build/your_app artifacts/your_app_linux
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            cp build/Release/your_app.exe artifacts/your_app_windows.exe
          else
            cp build/your_app artifacts/your_app_macos
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-binaries
          path: artifacts/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: release_artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
